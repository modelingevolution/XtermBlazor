name: Publish NuGet Package

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 2.1.3)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: |
          6.0.x
          7.0.x
          8.0.x
          9.0.x
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Extract version from tag
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
      
    - name: Use provided version
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
      run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
      
    - name: Update version in csproj
      if: env.VERSION != ''
      run: |
        sed -i "s/<Version>.*<\/Version>/<Version>${VERSION}<\/Version>/" XtermBlazor/XtermBlazor.csproj
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build --configuration Release --no-restore
      
    - name: Pack
      run: dotnet pack XtermBlazor/XtermBlazor.csproj --configuration Release --no-build --output ./nupkgs
      
    - name: Push to NuGet.org
      run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      
    - name: Push to GitHub Packages
      run: |
        dotnet nuget add source --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text --name github "https://nuget.pkg.github.com/modelingevolution/index.json"
        dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "github" --skip-duplicate